@model AuctionLand.Web.Models.RealEstateModel

@{
    ViewBag.Title = "Edit";
}
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
<br/><h2>Edit Realestate</h2>
</div>
    
    
    
<ul class="nav nav-tabs" id="tabRealEstateDetail">
  <li class="active"><a href="#details" data-toggle="tab">Details</a></li>
  <li><a href="#photos" data-toggle="tab">Photos</a></li>
  
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="details">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

      <div class="form-horizontal">
          <h4>RealEstate</h4>
          <hr />
          @Html.ValidationSummary(true)
          @Html.HiddenFor(model => model.Id)

          <div class="form-group">
              @Html.LabelFor(model => model.YearBuilt, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.YearBuilt)
                  @Html.ValidationMessageFor(model => model.YearBuilt)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Summary, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Summary)
                  @Html.ValidationMessageFor(model => model.Summary)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.EstateSize, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.EstateSize)
                  @Html.ValidationMessageFor(model => model.EstateSize)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.LotSize, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.LotSize)
                  @Html.ValidationMessageFor(model => model.LotSize)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Bedrooms, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Bedrooms)
                  @Html.ValidationMessageFor(model => model.Bedrooms)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Bathrooms, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Bathrooms)
                  @Html.ValidationMessageFor(model => model.Bathrooms)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.ListingStatusId, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EnumDropDownListFor(model => model.ListingStatus)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Featured, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Featured)
                  
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.ListingTypeId, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EnumDropDownListFor(model => model.ListingType)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.OccupancyStatusId, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EnumDropDownListFor(model => model.OccupancyStatus)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.RealEstateTypeId, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EnumDropDownListFor(model => model.RealEstateType)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Street, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Street)
                  @Html.ValidationMessageFor(model => model.Street)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.City)
                  @Html.ValidationMessageFor(model => model.City)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.State)
                  @Html.ValidationMessageFor(model => model.State)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Zip, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Zip)
                  @Html.ValidationMessageFor(model => model.Zip)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Location)
                  @Html.ValidationMessageFor(model => model.Location)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.StartDate, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.StartDate)
                  @Html.ValidationMessageFor(model => model.StartDate)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.EndDate, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.EndDate)
                  @Html.ValidationMessageFor(model => model.EndDate)
              </div>
          </div>
          <div class="form-group">
              @Html.LabelFor(model => model.SaleDate, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.SaleDate)
                  @Html.ValidationMessageFor(model => model.SaleDate)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.StartingBid, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.StartingBid)
                  @Html.ValidationMessageFor(model => model.StartingBid)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.EndingBid, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.EndingBid)
                  @Html.ValidationMessageFor(model => model.EndingBid)
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.BidIncrement, new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.BidIncrement)
                  @Html.ValidationMessageFor(model => model.BidIncrement)
              </div>
          </div>

          <div class="form-group">
              <div class="col-md-offset-2 col-md-10">
                  <input type="submit" value="Save" class="btn btn-success" />
              </div>
          </div>
      </div>
}
  </div>
  
  <div class="tab-pane" id="photos">
      
      <div class="real-estate-images-container container">
          <div class="row">
              <div class="table-responsive">
                  
                  <table id="image-table" class="table">
                
                      <tr>
                          <th>
                              Image
                          </th>
                          <th>
                              Description
                          </th>
                          <th>
                              Update/Delete
                          </th>
                           <th>
                          <input id="btn-add-new-photo" type="button" class="btn btn-success" value="Add New Photo" />
                               </th>
                      
                    </tr>
                          @foreach (var rei in Model.RealEstateImageModels)
                          {
                              <tr>
                                <td>
                                <a href="#" class="thumbnail"><img src="@rei.ImageUrl" alt="No Image" height="110" width="110"></a>
                                </td>
                                <td>
                                    <input type="text" id="imageUrl_@rei.Id" value="@rei.ImageUrl" class="hidden"/>
                                    <textarea id="description_@rei.Id"  >@rei.Description</textarea>
                                    <input type="text" id="realEstate_@rei.Id" value=@rei.RealEstate_Id class="hidden" />
                                    
                                </td>
                                  <td>
                                      <button type="button" class="btn btn-danger btn-delete-photo" data-reiid="@rei.Id">Delete</button>
                                      <button type="button" class="btn btn-default btn-update-description" data-reiid="@rei.Id">Save</button>
                                  </td>
                                  <td></td>
                              </tr>
                          }
                </table>
              </div>

         </div>
          </div>
      </div>
    </div>



<div id="dialog-add-new-photo" class="hidden">
    @using (Html.BeginForm("Create","RealEstateImage", FormMethod.Post, new { id="add-new-photo-form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <h4>Select an image to upload</h4>
        <input type="file" name="ImageFiles" id="ImageFiles" />
        <span>or provide a URL to an image</span>
        <input type="url" name="ImageUrl" id="ImageUrl" value="" /><br />
        <h4>Add Description for Photo</h4>
        <input type="text" name="Description" id="Description" value=""/>
        <input type="hidden" id="RealEstate_Id" name="RealEstate_Id" value="@Model.Id" />
        
        <div class="progress progress-striped active">
  <div id="file-upload-progress" class="progress-bar"  role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0%">
    <span class="sr-only">0% Complete</span>
  </div>
</div>
             
    }
</div>
@section scripts{
<script>
    $(document).ready(function () {


        var formHtml = $('#dialog-add-new-photo').html();
        
        $('#dialog-add-new-photo').remove();
        $(".btn-update-description").click(function () {
            var reiid = $(this).data('reiid');
            var description = $('#description_' + reiid).val();
            var imageUrl = $('#imageUrl_' + reiid).val();
            var theRealEstate = $('#realEstate_' +reiid).val();
            $.post('@Url.Action("Edit", "RealEstateImage")', { Id: reiid, ImageUrl: imageUrl, Description: description, RealEstate_Id: theRealEstate },
                function ()
                {
                    bootbox.alert("Updated!");
                });
            
                @*$.ajax(
                {
                    url: '@Url.Action("Edit","RealEstateImage")',
                    type: "POST",
                    data: {Id:reiid,ImageUrl:imageUrl,Description:description,RealEstate_Id:theRealEstate},
                    success: function (data, textStatus, jqXHR) {
                        //data: return data from server
                        if (data.error) {
                            bootbox.alert(data.errorMessage);
                        } else {
                            //var model = data.model;
                            //var html = '<div class="col-xs-6 col-md-3"><a href="#" class="thumbnail"><img src="' + data.model.ImageUrl + '" alt="..."></a></div>';
                            //$('.real-estate-images-container >div.row').append(html);

                            bootbox.hideAll();
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        //if fails
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });*@
                



        });
        $("#btn-add-new-photo").click(function () {
            var reiid = $('.btn-delete-photo').data('reiid');
            
            bootbox.dialog({
                message: formHtml,
                title: "Add New Real Estate Photo",
                buttons: {

                    danger: {
                        label: "Cancel",
                        className: "btn-danger",
                        callback: function () {

                        }
                    },
                    main: {
                        label: "Add Photo",
                        className: "btn-success",
                        callback: function () {
                            $('#add-new-photo-form').submit(function (e) {
                                var postData = new FormData($('form')[1]);
                                //var postData = $('#add-new-photo-form').serialize();
                                var formURL = $(this).attr("action");
                                $.ajax(
                                {
                                    url: formURL,
                                    type: "POST",
                                    data: postData,
                                    xhr: function () {  // Custom XMLHttpRequest
                                        var myXhr = $.ajaxSettings.xhr();
                                        if (myXhr.upload) { // Check if upload property exists
                                            myXhr.upload.addEventListener('progress', progressHandlingFunction, false); // For handling the progress of the upload
                                        }
                                        return myXhr;
                                    },
                                    success: function (data, textStatus, jqXHR) {
                                        //data: return data from server
                                        if (data.error) {
                                            bootbox.alert(data.errorMessage);
                                        } else {
                                            var model = data.model;
                                            var html = "<tr><td><a href='#' class='thumbnail'><img src='"+ data.model.ImageUrl+ "' alt='No Image' height='110' width='110'></a></td><td><input type='text' id='imageUrl_"+ reiid + "' value ='"+data.model.ImageUrl+"'  class='hidden'/> <textarea id='description_"+ reiid +"'>"+ data.model.Description +"</textarea><input type='text' id='realEstate_"+reiid+"' value ='"+data.model.RealEstate_Id+"'  class='hidden' /></td><td><button type='button' class='btn btn-danger btn-delete-photo' data-reiid='"+reiid+"'>Delete</button><button type='button' class='btn btn-default btn-update-description' data-reiid='"+reiid+"'>Save</button></td></tr>";
                                            $('#image-table').append(html);
                                           
                                            bootbox.hideAll();
                                        }
                                    },
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        //if fails
                                    },
                                    cache: false,
                                    contentType: false,
                                    processData: false
                                });
                                e.preventDefault(); //STOP default action
                                //e.unbind(); //unbind. to stop multiple form submit.


                            });
                            $('#add-new-photo-form').submit();
                        }
                    }
                }
            });
        });

        $(".btn-delete-photo").click(function () {

            var reiid = $(this).data('reiid');
            var rowToDelete = $(this).parents('tr');
            bootbox.dialog({
                message: 'Are you sure you would like to delete this photo?',
                title: "Delete Real Estate Photo",
                buttons: {

                    danger: {
                        label: "Delete",
                        className: "btn-danger",
                        callback: function () {

                            $.ajax(
                            {
                                url: '@Url.Action("Delete", "RealEstateImage")/' + reiid,
                                    type: "DELETE",

                                    success: function (data, textStatus, jqXHR) {
                                        rowToDelete.remove();
                                    },
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        //if fails
                                    },
                                    cache: false,
                                    contentType: false,
                                    processData: false
                            });

                        }
                    },
                    main: 
                        {
                            label: "Cancel",
                            className: "btn-success",
                            callback: function () {}
                        }
                }
            });

        });
    });
    
        function progressHandlingFunction(e) {
            if (e.lengthComputable) {
                $('#file-upload-progress').attr({ value: e.loaded, max: e.total });
            }
        }
    
</script>
    }
   



